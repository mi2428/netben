
nodes:
  - name: RR
    image: slankdev/frr
    interfaces:
      - { name: net0, type: bridge, args: B1 }

  - name: R1
    image: slankdev/frr
    interfaces:
      - { name: net0, type: bridge, args: B1 }
      - { name: net1, type: direct, args: C1#net0 }

  - name: R2
    image: slankdev/frr
    interfaces:
      - { name: net0, type: bridge, args: B1 }
      - { name: net1, type: direct, args: C2#net0 }

  - name: R3
    image: slankdev/frr
    interfaces:
      - { name: net0, type: bridge, args: B1 }
      - { name: net1, type: direct, args: C3#net0 }

  - name: C1
    image: slankdev/ubuntu:18.04
    interfaces:
      - { name: net0, type: direct, args: R1#net1 }

  - name: C2
    image: slankdev/ubuntu:18.04
    interfaces:
      - { name: net0, type: direct, args: R2#net1 }

  - name: C3
    image: slankdev/ubuntu:18.04
    interfaces:
      - { name: net0, type: direct, args: R3#net1 }

switches:
  - name: B1
    interfaces:
      - { name: net0, type: container, args: RR }
      - { name: net0, type: container, args: R1 }
      - { name: net0, type: container, args: R2 }

node_configs:
  - name: RR
    cmds:
      - cmd: /usr/lib/frr/frr start
      - cmd: >-
          vtysh -c "conf t"
          -c "interface lo"
          -c " ip address 10.0.0.10/32"
          -c "interface net0"
          -c " ip address 10.0.1.10/24"
          -c "ip route 10.0.0.1/32 10.0.1.1"
          -c "ip route 10.0.0.2/32 10.0.1.2"
          -c "ip route 10.0.0.3/32 10.0.1.3"
          -c "router bgp 65000"
          -c " bgp router-id 10.0.0.10"
          -c " neighbor 10.0.0.1 remote-as 65000"
          -c " neighbor 10.0.0.1 update-source lo"
          -c " neighbor 10.0.0.2 remote-as 65000"
          -c " neighbor 10.0.0.2 update-source lo"
          -c " neighbor 10.0.0.3 remote-as 65000"
          -c " neighbor 10.0.0.3 update-source lo"
          -c " address-family l2vpn evpn"
          -c "  neighbor 10.0.0.1 activate"
          -c "  neighbor 10.0.0.1 route-reflector-client"
          -c "  neighbor 10.0.0.2 activate"
          -c "  neighbor 10.0.0.2 route-reflector-client"
          -c "  neighbor 10.0.0.3 activate"
          -c "  neighbor 10.0.0.3 route-reflector-client"
          -c "  advertise-all-vni"

  - name: R1
    cmds:
      - cmd: ip link add br0 type bridge
      - cmd: ip link set br0 up
      - cmd: ip link set dev net1 master br0
      - cmd: ip link set dev net1 promisc on
      - cmd: ip link set dev net1 up
      - cmd: ip link add vxlan100 type vxlan id 100 dstport 4789 local 10.0.0.1
      - cmd: ip link set dev vxlan100 up
      - cmd: ip link set dev vxlan100 promisc on
      - cmd: ip link set dev vxlan100 master br0
      - cmd: /usr/lib/frr/frr start
      - cmd: >-
          vtysh -c "conf t"
          -c "interface lo"
          -c " ip address 10.0.0.1/32"
          -c "interface net0"
          -c " ip address 10.0.1.1/24"
          -c "ip route 10.0.0.2/32 10.0.1.2"
          -c "ip route 10.0.0.3/32 10.0.1.3"
          -c "ip route 10.0.0.10/32 10.0.1.10"
          -c "router bgp 65000"
          -c " bgp router-id 10.0.0.1"
          -c " neighbor 10.0.0.10 remote-as 65000"
          -c " neighbor 10.0.0.10 update-source lo"
          -c " address-family l2vpn evpn"
          -c "  neighbor 10.0.0.10 activate"
          -c "  advertise-all-vni"

  - name: R2
    cmds:
      - cmd: ip link add br0 type bridge
      - cmd: ip link set br0 up
      - cmd: ip link set dev net1 master br0
      - cmd: ip link set dev net1 promisc on
      - cmd: ip link set dev net1 up
      - cmd: ip link add vxlan100 type vxlan id 100 dstport 4789 local 10.0.0.2
      - cmd: ip link set dev vxlan100 up
      - cmd: ip link set dev vxlan100 promisc on
      - cmd: ip link set dev vxlan100 master br0
      - cmd: /usr/lib/frr/frr start
      - cmd: >-
          vtysh -c "conf t"
          -c "interface lo"
          -c " ip address 10.0.0.2/32"
          -c "interface net0"
          -c " ip address 10.0.1.2/24"
          -c "ip route 10.0.0.1/32 10.0.1.1"
          -c "ip route 10.0.0.3/32 10.0.1.3"
          -c "ip route 10.0.0.10/32 10.0.1.10"
          -c "router bgp 65000"
          -c " bgp router-id 10.0.0.2"
          -c " neighbor 10.0.0.10 remote-as 65000"
          -c " neighbor 10.0.0.10 update-source lo"
          -c " address-family l2vpn evpn"
          -c "  neighbor 10.0.0.10 activate"
          -c "  advertise-all-vni"

  - name: R3
    cmds:
      - cmd: ip link add br0 type bridge
      - cmd: ip link set br0 up
      - cmd: ip link set dev net1 master br0
      - cmd: ip link set dev net1 promisc on
      - cmd: ip link set dev net1 up
      - cmd: ip link add vxlan100 type vxlan id 100 dstport 4789 local 10.0.0.3
      - cmd: ip link set dev vxlan100 up
      - cmd: ip link set dev vxlan100 promisc on
      - cmd: ip link set dev vxlan100 master br0
      - cmd: /usr/lib/frr/frr start
      - cmd: >-
          vtysh -c "conf t"
          -c "interface lo"
          -c " ip address 10.0.0.3/32"
          -c "interface net0"
          -c " ip address 10.0.1.3/24"
          -c "ip route 10.0.0.1/32 10.0.1.1"
          -c "ip route 10.0.0.2/32 10.0.1.2"
          -c "ip route 10.0.0.10/32 10.0.1.10"
          -c "router bgp 65000"
          -c " bgp router-id 10.0.0.3"
          -c " neighbor 10.0.0.10 remote-as 65000"
          -c " neighbor 10.0.0.10 update-source lo"
          -c " address-family l2vpn evpn"
          -c "  neighbor 10.0.0.10 activate"
          -c "  advertise-all-vni"

  - name: C1
    cmds:
      - cmd: ip addr add 192.168.0.1/24 dev net0
      - cmd: sh -c "echo C1 > index.html"
      - cmd: nohup python3 -m http.server 80 &

  - name: C2
    cmds:
      - cmd: ip addr add 192.168.0.2/24 dev net0
      - cmd: sh -c "echo C2 > index.html"
      - cmd: nohup python3 -m http.server 80 &

  - name: C3
    cmds:
      - cmd: ip addr add 192.168.0.3/24 dev net0
      - cmd: sh -c "echo C3 > index.html"
      - cmd: nohup python3 -m http.server 80 &

test:
  - name: p2p
    cmds:
      - cmd: docker exec C1 ping -c2 192.168.0.2
      - cmd: docker exec C1 ping -c2 192.168.0.3
      - cmd: docker exec C2 ping -c2 192.168.0.1
      - cmd: docker exec C2 ping -c2 192.168.0.3
      - cmd: docker exec C3 ping -c2 192.168.0.1
      - cmd: docker exec C3 ping -c2 192.168.0.2

